name: ssg-example-gen
networks:
  app-network:
    name: ssg-example_app-network
    driver: bridge
services:
  kafka-bitnami:
    hostname: kafka-bitnami-gen
    container_name: kafka-bitnami-gen
    image: bitnami/kafka:latest
    restart: on-failure
    expose:
      - 29091
      - 29092
      - 29093
    ports:
      - "29091:29091"
      - "29092:29092"
      - "29093:29093"
      - "9092:9092"
    volumes:
      - "./data/kafka:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-bitnami:29093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka-bitnami:29092,CONTROLLER://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-bitnami:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20000000
    networks:
      - app-network
  kafka-ui:
    container_name: kafka-ui-gen
    image: provectuslabs/kafka-ui:latest
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kafka-ui.config.yaml:/etc/kafkaui/dynamic_config.yaml
    ports:
      - 8080:8080
    networks:
      - app-network
    depends_on:
      - kafka-bitnami
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: go-backend-gen
    command: "/app/kafka-producer/main"
    ports:
      - "3010:3010"
    environment:
      PORT: 3010
      GOOGLE_BOOK_API_KEY: ${GOOGLE_BOOK_API_KEY}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      KAFKA_NUMBER_PARTITIONS: ${KAFKA_NUMBER_PARTITIONS}
      GOCACHE: /root/.cache/go-build
    volumes:
      - ./.cache/go-build:/root/.cache/go-build:ro
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - kafka-bitnami

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: ["node", "/app/generation/dist/generation/generation.js"]
    environment:
      NUXT_PUBLIC_API_BASE: ${NUXT_PUBLIC_API_BASE}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID}

      OUTPUT_DIR: ${OUTPUT_DIR}
    volumes:
      - ./nginx/public:${OUTPUT_DIR}:ro
    deploy:
      mode: replicated
      replicas: ${KAFKA_NUMBER_PARTITIONS}
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend