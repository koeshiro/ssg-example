/* tslint:disable */
/* eslint-disable */
/**
 * ssg-example
 * example backend for static site generation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: koeshiro@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BooksVolume } from './BooksVolume';
import {
    BooksVolumeFromJSON,
    BooksVolumeFromJSONTyped,
    BooksVolumeToJSON,
    BooksVolumeToJSONTyped,
} from './BooksVolume';

/**
 * 
 * @export
 * @interface BooksVolumes
 */
export interface BooksVolumes {
    /**
     * Items: A list of volumes.
     * @type {Array<BooksVolume>}
     * @memberof BooksVolumes
     */
    items?: Array<BooksVolume>;
    /**
     * Kind: Resource type.
     * @type {string}
     * @memberof BooksVolumes
     */
    kind?: string;
    /**
     * TotalItems: Total number of volumes found. This might be greater than the
     * number of volumes returned in this response if results have been paginated.
     * @type {number}
     * @memberof BooksVolumes
     */
    totalItems?: number;
}

/**
 * Check if a given object implements the BooksVolumes interface.
 */
export function instanceOfBooksVolumes(value: object): value is BooksVolumes {
    return true;
}

export function BooksVolumesFromJSON(json: any): BooksVolumes {
    return BooksVolumesFromJSONTyped(json, false);
}

export function BooksVolumesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooksVolumes {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(BooksVolumeFromJSON)),
        'kind': json['kind'] == null ? undefined : json['kind'],
        'totalItems': json['totalItems'] == null ? undefined : json['totalItems'],
    };
}

export function BooksVolumesToJSON(json: any): BooksVolumes {
    return BooksVolumesToJSONTyped(json, false);
}

export function BooksVolumesToJSONTyped(value?: BooksVolumes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(BooksVolumeToJSON)),
        'kind': value['kind'],
        'totalItems': value['totalItems'],
    };
}

