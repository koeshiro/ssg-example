/* tslint:disable */
/* eslint-disable */
/**
 * ssg-example
 * example backend for static site generation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: koeshiro@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BooksVolumeLayerInfo } from './BooksVolumeLayerInfo';
import {
    BooksVolumeLayerInfoFromJSON,
    BooksVolumeLayerInfoFromJSONTyped,
    BooksVolumeLayerInfoToJSON,
    BooksVolumeLayerInfoToJSONTyped,
} from './BooksVolumeLayerInfo';
import type { BooksVolumeUserInfo } from './BooksVolumeUserInfo';
import {
    BooksVolumeUserInfoFromJSON,
    BooksVolumeUserInfoFromJSONTyped,
    BooksVolumeUserInfoToJSON,
    BooksVolumeUserInfoToJSONTyped,
} from './BooksVolumeUserInfo';
import type { BooksVolumeAccessInfo } from './BooksVolumeAccessInfo';
import {
    BooksVolumeAccessInfoFromJSON,
    BooksVolumeAccessInfoFromJSONTyped,
    BooksVolumeAccessInfoToJSON,
    BooksVolumeAccessInfoToJSONTyped,
} from './BooksVolumeAccessInfo';
import type { BooksVolumeSearchInfo } from './BooksVolumeSearchInfo';
import {
    BooksVolumeSearchInfoFromJSON,
    BooksVolumeSearchInfoFromJSONTyped,
    BooksVolumeSearchInfoToJSON,
    BooksVolumeSearchInfoToJSONTyped,
} from './BooksVolumeSearchInfo';
import type { BooksVolumeVolumeInfo } from './BooksVolumeVolumeInfo';
import {
    BooksVolumeVolumeInfoFromJSON,
    BooksVolumeVolumeInfoFromJSONTyped,
    BooksVolumeVolumeInfoToJSON,
    BooksVolumeVolumeInfoToJSONTyped,
} from './BooksVolumeVolumeInfo';
import type { BooksVolumeRecommendedInfo } from './BooksVolumeRecommendedInfo';
import {
    BooksVolumeRecommendedInfoFromJSON,
    BooksVolumeRecommendedInfoFromJSONTyped,
    BooksVolumeRecommendedInfoToJSON,
    BooksVolumeRecommendedInfoToJSONTyped,
} from './BooksVolumeRecommendedInfo';
import type { BooksVolumeSaleInfo } from './BooksVolumeSaleInfo';
import {
    BooksVolumeSaleInfoFromJSON,
    BooksVolumeSaleInfoFromJSONTyped,
    BooksVolumeSaleInfoToJSON,
    BooksVolumeSaleInfoToJSONTyped,
} from './BooksVolumeSaleInfo';

/**
 * 
 * @export
 * @interface BooksVolume
 */
export interface BooksVolume {
    /**
     * AccessInfo: Any information about a volume related to reading or obtaining
     * that volume text. This information can depend on country (books may be
     * public domain in one country but not in another, e.g.).
     * @type {BooksVolumeAccessInfo}
     * @memberof BooksVolume
     */
    accessInfo?: BooksVolumeAccessInfo;
    /**
     * Etag: Opaque identifier for a specific version of a volume resource. (In
     * LITE projection)
     * @type {string}
     * @memberof BooksVolume
     */
    etag?: string;
    /**
     * Id: Unique identifier for a volume. (In LITE projection.)
     * @type {string}
     * @memberof BooksVolume
     */
    id?: string;
    /**
     * Kind: Resource type for a volume. (In LITE projection.)
     * @type {string}
     * @memberof BooksVolume
     */
    kind?: string;
    /**
     * LayerInfo: What layers exist in this volume and high level information about
     * them.
     * @type {BooksVolumeLayerInfo}
     * @memberof BooksVolume
     */
    layerInfo?: BooksVolumeLayerInfo;
    /**
     * RecommendedInfo: Recommendation related information for this volume.
     * @type {BooksVolumeRecommendedInfo}
     * @memberof BooksVolume
     */
    recommendedInfo?: BooksVolumeRecommendedInfo;
    /**
     * SaleInfo: Any information about a volume related to the eBookstore and/or
     * purchaseability. This information can depend on the country where the
     * request originates from (i.e. books may not be for sale in certain
     * countries).
     * @type {BooksVolumeSaleInfo}
     * @memberof BooksVolume
     */
    saleInfo?: BooksVolumeSaleInfo;
    /**
     * SearchInfo: Search result information related to this volume.
     * @type {BooksVolumeSearchInfo}
     * @memberof BooksVolume
     */
    searchInfo?: BooksVolumeSearchInfo;
    /**
     * SelfLink: URL to this resource. (In LITE projection.)
     * @type {string}
     * @memberof BooksVolume
     */
    selfLink?: string;
    /**
     * UserInfo: User specific information related to this volume. (e.g. page this
     * user last read or whether they purchased this book)
     * @type {BooksVolumeUserInfo}
     * @memberof BooksVolume
     */
    userInfo?: BooksVolumeUserInfo;
    /**
     * VolumeInfo: General volume information.
     * @type {BooksVolumeVolumeInfo}
     * @memberof BooksVolume
     */
    volumeInfo?: BooksVolumeVolumeInfo;
}

/**
 * Check if a given object implements the BooksVolume interface.
 */
export function instanceOfBooksVolume(value: object): value is BooksVolume {
    return true;
}

export function BooksVolumeFromJSON(json: any): BooksVolume {
    return BooksVolumeFromJSONTyped(json, false);
}

export function BooksVolumeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooksVolume {
    if (json == null) {
        return json;
    }
    return {
        
        'accessInfo': json['accessInfo'] == null ? undefined : BooksVolumeAccessInfoFromJSON(json['accessInfo']),
        'etag': json['etag'] == null ? undefined : json['etag'],
        'id': json['id'] == null ? undefined : json['id'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'layerInfo': json['layerInfo'] == null ? undefined : BooksVolumeLayerInfoFromJSON(json['layerInfo']),
        'recommendedInfo': json['recommendedInfo'] == null ? undefined : BooksVolumeRecommendedInfoFromJSON(json['recommendedInfo']),
        'saleInfo': json['saleInfo'] == null ? undefined : BooksVolumeSaleInfoFromJSON(json['saleInfo']),
        'searchInfo': json['searchInfo'] == null ? undefined : BooksVolumeSearchInfoFromJSON(json['searchInfo']),
        'selfLink': json['selfLink'] == null ? undefined : json['selfLink'],
        'userInfo': json['userInfo'] == null ? undefined : BooksVolumeUserInfoFromJSON(json['userInfo']),
        'volumeInfo': json['volumeInfo'] == null ? undefined : BooksVolumeVolumeInfoFromJSON(json['volumeInfo']),
    };
}

export function BooksVolumeToJSON(json: any): BooksVolume {
    return BooksVolumeToJSONTyped(json, false);
}

export function BooksVolumeToJSONTyped(value?: BooksVolume | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accessInfo': BooksVolumeAccessInfoToJSON(value['accessInfo']),
        'etag': value['etag'],
        'id': value['id'],
        'kind': value['kind'],
        'layerInfo': BooksVolumeLayerInfoToJSON(value['layerInfo']),
        'recommendedInfo': BooksVolumeRecommendedInfoToJSON(value['recommendedInfo']),
        'saleInfo': BooksVolumeSaleInfoToJSON(value['saleInfo']),
        'searchInfo': BooksVolumeSearchInfoToJSON(value['searchInfo']),
        'selfLink': value['selfLink'],
        'userInfo': BooksVolumeUserInfoToJSON(value['userInfo']),
        'volumeInfo': BooksVolumeVolumeInfoToJSON(value['volumeInfo']),
    };
}

