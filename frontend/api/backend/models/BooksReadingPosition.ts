/* tslint:disable */
/* eslint-disable */
/**
 * ssg-example
 * example backend for static site generation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: koeshiro@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BooksReadingPosition
 */
export interface BooksReadingPosition {
    /**
     * EpubCfiPosition: Position in an EPUB as a CFI.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    epubCfiPosition?: string;
    /**
     * GbImagePosition: Position in a volume for image-based content.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    gbImagePosition?: string;
    /**
     * GbTextPosition: Position in a volume for text-based content.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    gbTextPosition?: string;
    /**
     * Kind: Resource type for a reading position.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    kind?: string;
    /**
     * PdfPosition: Position in a PDF file.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    pdfPosition?: string;
    /**
     * Updated: Timestamp when this reading position was last updated (formatted
     * UTC timestamp with millisecond resolution).
     * @type {string}
     * @memberof BooksReadingPosition
     */
    updated?: string;
    /**
     * VolumeId: Volume id associated with this reading position.
     * @type {string}
     * @memberof BooksReadingPosition
     */
    volumeId?: string;
}

/**
 * Check if a given object implements the BooksReadingPosition interface.
 */
export function instanceOfBooksReadingPosition(value: object): value is BooksReadingPosition {
    return true;
}

export function BooksReadingPositionFromJSON(json: any): BooksReadingPosition {
    return BooksReadingPositionFromJSONTyped(json, false);
}

export function BooksReadingPositionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooksReadingPosition {
    if (json == null) {
        return json;
    }
    return {
        
        'epubCfiPosition': json['epubCfiPosition'] == null ? undefined : json['epubCfiPosition'],
        'gbImagePosition': json['gbImagePosition'] == null ? undefined : json['gbImagePosition'],
        'gbTextPosition': json['gbTextPosition'] == null ? undefined : json['gbTextPosition'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'pdfPosition': json['pdfPosition'] == null ? undefined : json['pdfPosition'],
        'updated': json['updated'] == null ? undefined : json['updated'],
        'volumeId': json['volumeId'] == null ? undefined : json['volumeId'],
    };
}

export function BooksReadingPositionToJSON(json: any): BooksReadingPosition {
    return BooksReadingPositionToJSONTyped(json, false);
}

export function BooksReadingPositionToJSONTyped(value?: BooksReadingPosition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'epubCfiPosition': value['epubCfiPosition'],
        'gbImagePosition': value['gbImagePosition'],
        'gbTextPosition': value['gbTextPosition'],
        'kind': value['kind'],
        'pdfPosition': value['pdfPosition'],
        'updated': value['updated'],
        'volumeId': value['volumeId'],
    };
}

