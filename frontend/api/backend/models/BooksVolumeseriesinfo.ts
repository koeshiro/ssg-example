/* tslint:disable */
/* eslint-disable */
/**
 * ssg-example
 * example backend for static site generation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: koeshiro@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BooksVolumeseriesinfoVolumeSeries } from './BooksVolumeseriesinfoVolumeSeries';
import {
    BooksVolumeseriesinfoVolumeSeriesFromJSON,
    BooksVolumeseriesinfoVolumeSeriesFromJSONTyped,
    BooksVolumeseriesinfoVolumeSeriesToJSON,
    BooksVolumeseriesinfoVolumeSeriesToJSONTyped,
} from './BooksVolumeseriesinfoVolumeSeries';

/**
 * 
 * @export
 * @interface BooksVolumeseriesinfo
 */
export interface BooksVolumeseriesinfo {
    /**
     * BookDisplayNumber: The display number string. This should be used only for
     * display purposes and the actual sequence should be inferred from the below
     * orderNumber.
     * @type {string}
     * @memberof BooksVolumeseriesinfo
     */
    bookDisplayNumber?: string;
    /**
     * Kind: Resource type.
     * @type {string}
     * @memberof BooksVolumeseriesinfo
     */
    kind?: string;
    /**
     * ShortSeriesBookTitle: Short book title in the context of the series.
     * @type {string}
     * @memberof BooksVolumeseriesinfo
     */
    shortSeriesBookTitle?: string;
    /**
     * 
     * @type {Array<BooksVolumeseriesinfoVolumeSeries>}
     * @memberof BooksVolumeseriesinfo
     */
    volumeSeries?: Array<BooksVolumeseriesinfoVolumeSeries>;
}

/**
 * Check if a given object implements the BooksVolumeseriesinfo interface.
 */
export function instanceOfBooksVolumeseriesinfo(value: object): value is BooksVolumeseriesinfo {
    return true;
}

export function BooksVolumeseriesinfoFromJSON(json: any): BooksVolumeseriesinfo {
    return BooksVolumeseriesinfoFromJSONTyped(json, false);
}

export function BooksVolumeseriesinfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooksVolumeseriesinfo {
    if (json == null) {
        return json;
    }
    return {
        
        'bookDisplayNumber': json['bookDisplayNumber'] == null ? undefined : json['bookDisplayNumber'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'shortSeriesBookTitle': json['shortSeriesBookTitle'] == null ? undefined : json['shortSeriesBookTitle'],
        'volumeSeries': json['volumeSeries'] == null ? undefined : ((json['volumeSeries'] as Array<any>).map(BooksVolumeseriesinfoVolumeSeriesFromJSON)),
    };
}

export function BooksVolumeseriesinfoToJSON(json: any): BooksVolumeseriesinfo {
    return BooksVolumeseriesinfoToJSONTyped(json, false);
}

export function BooksVolumeseriesinfoToJSONTyped(value?: BooksVolumeseriesinfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bookDisplayNumber': value['bookDisplayNumber'],
        'kind': value['kind'],
        'shortSeriesBookTitle': value['shortSeriesBookTitle'],
        'volumeSeries': value['volumeSeries'] == null ? undefined : ((value['volumeSeries'] as Array<any>).map(BooksVolumeseriesinfoVolumeSeriesToJSON)),
    };
}

