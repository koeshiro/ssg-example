/* tslint:disable */
/* eslint-disable */
/**
 * ssg-example
 * example backend for static site generation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: koeshiro@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BooksReviewAuthor } from './BooksReviewAuthor';
import {
    BooksReviewAuthorFromJSON,
    BooksReviewAuthorFromJSONTyped,
    BooksReviewAuthorToJSON,
    BooksReviewAuthorToJSONTyped,
} from './BooksReviewAuthor';
import type { BooksReviewSource } from './BooksReviewSource';
import {
    BooksReviewSourceFromJSON,
    BooksReviewSourceFromJSONTyped,
    BooksReviewSourceToJSON,
    BooksReviewSourceToJSONTyped,
} from './BooksReviewSource';

/**
 * 
 * @export
 * @interface BooksReview
 */
export interface BooksReview {
    /**
     * Author: Author of this review.
     * @type {BooksReviewAuthor}
     * @memberof BooksReview
     */
    author?: BooksReviewAuthor;
    /**
     * Content: Review text.
     * @type {string}
     * @memberof BooksReview
     */
    content?: string;
    /**
     * Date: Date of this review.
     * @type {string}
     * @memberof BooksReview
     */
    date?: string;
    /**
     * FullTextUrl: URL for the full review text, for reviews gathered from the
     * web.
     * @type {string}
     * @memberof BooksReview
     */
    fullTextUrl?: string;
    /**
     * Kind: Resource type for a review.
     * @type {string}
     * @memberof BooksReview
     */
    kind?: string;
    /**
     * Rating: Star rating for this review. Possible values are ONE, TWO, THREE,
     * FOUR, FIVE or NOT_RATED.
     * @type {string}
     * @memberof BooksReview
     */
    rating?: string;
    /**
     * Source: Information regarding the source of this review, when the review is
     * not from a Google Books user.
     * @type {BooksReviewSource}
     * @memberof BooksReview
     */
    source?: BooksReviewSource;
    /**
     * Title: Title for this review.
     * @type {string}
     * @memberof BooksReview
     */
    title?: string;
    /**
     * Type: Source type for this review. Possible values are EDITORIAL, WEB_USER
     * or GOOGLE_USER.
     * @type {string}
     * @memberof BooksReview
     */
    type?: string;
    /**
     * VolumeId: Volume that this review is for.
     * @type {string}
     * @memberof BooksReview
     */
    volumeId?: string;
}

/**
 * Check if a given object implements the BooksReview interface.
 */
export function instanceOfBooksReview(value: object): value is BooksReview {
    return true;
}

export function BooksReviewFromJSON(json: any): BooksReview {
    return BooksReviewFromJSONTyped(json, false);
}

export function BooksReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooksReview {
    if (json == null) {
        return json;
    }
    return {
        
        'author': json['author'] == null ? undefined : BooksReviewAuthorFromJSON(json['author']),
        'content': json['content'] == null ? undefined : json['content'],
        'date': json['date'] == null ? undefined : json['date'],
        'fullTextUrl': json['fullTextUrl'] == null ? undefined : json['fullTextUrl'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'source': json['source'] == null ? undefined : BooksReviewSourceFromJSON(json['source']),
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'] == null ? undefined : json['type'],
        'volumeId': json['volumeId'] == null ? undefined : json['volumeId'],
    };
}

export function BooksReviewToJSON(json: any): BooksReview {
    return BooksReviewToJSONTyped(json, false);
}

export function BooksReviewToJSONTyped(value?: BooksReview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'author': BooksReviewAuthorToJSON(value['author']),
        'content': value['content'],
        'date': value['date'],
        'fullTextUrl': value['fullTextUrl'],
        'kind': value['kind'],
        'rating': value['rating'],
        'source': BooksReviewSourceToJSON(value['source']),
        'title': value['title'],
        'type': value['type'],
        'volumeId': value['volumeId'],
    };
}

